{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/MainPage/MainPage.js","components/views/ExhibitPage/ExhibitPage.js","components/views/Library/Sections/UserCardBlock.js","components/views/Library/Library.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/MyPage/MyUpload/MyUpload.js","components/views/MyPage/FAQ.js","components/views/MyPage/Mypage.js","components/views/LoginPage/ServiceCenter.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/Sections/SingleComment.js","components/views/DetailProductPage/Sections/ReplyComment.js","components/views/DetailProductPage/Sections/Comment.js","components/views/DetailProductPage/Sections/Favorite.js","components/views/DetailProductPage/DetailProductPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js","components/views/MainPage/img/subscribeButton.png","components/views/MainPage/img/ExhibitionImg.jpg","components/views/LandingPage/img/artwork.png","components/views/MainPage/img/mainImg.png","components/views/ExhibitPage/img/Background.png","components/views/Library/img/library.png","components/views/NavBar/Sections/img/AA.png","components/views/Footer/img/AA.png","components/views/UploadProductPage/img/upload.png","components/views/MyPage/img/MyPage.png","components/views/ExhibitPage/img/exhibitImg.jpg"],"names":["auth","type","payload","Axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","images","map","image","index","key","style","width","height","src","alt","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","list","value","Fragment","margin","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","continents","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","event","currentTarget","refreshFunction","enterButton","size","LandingPage","Products","setProducts","Skip","setSkip","Limit","PostSize","setPostSize","Filters","getProducts","skip","limit","body","axios","post","success","console","log","loadMore","productInfo","postSize","alert","renderCards","product","lg","md","xs","cover","href","title","description","artist","filters","category","newFilters","showFilteredResults","Artwork","position","top","zIndex","textAlign","padding","color","fontSize","newSearchTerm","searchTerm","gutter","onClick","borderRadius","backgroundColor","lineHeight","SubscribeButton","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","level","Item","id","prefix","onBlur","border","htmlType","minWidth","disabled","float","TextArea","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","confirmPassword","number","school","college","department","nickname","sns","career","oneOf","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","Meta","Card","MainPage","MainImage","hoverable","ExhibitionImage","CaretRightOutlined","ExhibitPage","Exhibition","UserCardBlock","products","Library","libItems","userData","library","length","forEach","item","userLib","libItem","productDetail","quantity","getLibItems","libDetail","LibraryImg","productId","removeLibItem","LeftMenu","mode","status","NavBar","visible","setVisible","Logo","placement","closable","onClose","Footer","display","background","FileUpload","Images","setImages","justifyContent","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","alignItems","overflowX","newImages","deleteHandler","Option","Select","Continents","UploadProductPage","setTitle","Description","setDescription","Artist","setArtist","Tech","setTech","Dimensions","setDimensions","Year","setYear","Continent","setContinent","SNS","setSNS","IsModal","setIsModal","PersonalInfo","setPersonalInfo","Upload","maxWidth","marginBottom","onSubmitCapture","preventDefault","writer","tech","dimensions","year","snsCheck","personalInfo","textDecoration","textUnderlinePosition","boxShadow","Group","target","onOk","onCancel","marginLeft","marginRight","MyUpload","Product","idx","callback","FAQ","TabPane","Tabs","Mypage","setUserId","UserDatas","setUserDatas","users","userDatas","MyPageImg","paddingTop","tab","ServiceCenter","ProductImage","detail","original","thumbnail","items","ProductInfo","bordered","wordBreak","AddToLib","borderColor","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","variables","content","postId","responseTo","comment","result","actions","author","avatar","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","Comments","commentValue","setcommentValue","Favorite","userFrom","productTitle","productPost","productArtist","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","favoriteNumber","favorited","marginTop","DetailProductPage","match","params","setProduct","setCommentLists","Variable","comments","Comment","newComment","concat","App","fallback","minHeight","exact","path","component","Auth","LibraryPage","LoginPage","MyPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a9502250.chunk.js","sourcesContent":["import Axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_LIB,\n    GET_LIB_ITEMS,\n    REMOVE_LIB_ITEM,\n    // REMOVE_PRO_ITEM,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = Axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = Axios.post(`${USER_SERVER}/login`,dataToSubmit)\n        .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = Axios.get(`${USER_SERVER}/auth`)\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = Axios.get(`${USER_SERVER}/logout`)\n        .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\nexport function AddToLib(id){\n\n    let body = {\n        productId: id\n    }\n    \n    const request = Axios.post(`${USER_SERVER}/library`, body)\n        .then(response => response.data);\n\n    return {\n        type: ADD_TO_LIB,\n        payload: request\n    }\n}\n\nexport function getLibItems(libItems, userLib){\n    \n    const request = Axios.get(`/api/product/products_by_id?id=${libItems}&type=array`)\n        .then(response => {\n            // libItems에 해당하는 정보들을 product collection에서 가져온 후에 quentity 정보를 넣어준다\n\n            userLib.forEach(libItem => {\n                response.data.forEach((productDetail, index) => {\n                    //게시물의 id와 user library의 id와 같으면 quentity를 가져온다\n\n                    if(libItem.id === productDetail._id) {\n                        response.data[index].quantity = libItem.quantity\n                    }\n                })\n            })\n            return response.data;\n        });\n\n    return {\n        type: GET_LIB_ITEMS,\n        payload: request\n    }\n}\n\nexport function removeLibItem(productId){\n    \n    const request = Axios.get(`/api/users/removeFromLib?id=${productId}`)\n        .then(response => {\n            //productInfo와 library 정보를 조합해 libDetail을 만듬\n            response.data.library.forEach(item => {\n                response.data.productInfo.forEach((product, index) => {\n                    if(item.id === product._id) {\n                        response.data.productInfo[index].quantity = item.quantity\n                    }\n                })\n            })\n            return response.data;\n        });\n\n    return {\n        type: REMOVE_LIB_ITEM,\n        payload: request\n    }\n}\n\n\n// export function removeProItem(productId){\n    \n//     const request = Axios.get(`/api/product/removeFromPro?id=${productId}`)\n//         .then(response => {\n//             console.log('res', response)\n//         });\n\n//     return {\n//         type: REMOVE_PRO_ITEM,\n//         payload: request\n//     }\n// }\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const ADD_TO_LIB = 'add_to_lib';\nexport const GET_LIB_ITEMS = 'get_lib_items';\nexport const REMOVE_LIB_ITEM = 'remove_lib_item';\nexport const REMOVE_PRO_ITEM = 'remove_pro_item';","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\r\nimport { Carousel } from 'antd'\r\n\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n            <Carousel>\r\n                {props.images.map((image, index) => (\r\n                    <div key={index}>\r\n                        <img style={{ width: '100%', height: '300px' }}\r\n                        src={`http://localhost:5000/${image}`}\r\n                        alt='img' />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider","import React, { useState } from 'react'\r\nimport { Collapse, Checkbox } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n\r\n    //체크한 체크박스 정보를 받아온다\r\n    const [Checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (value) => {\r\n        //누른 것의 index를 구하고\r\n        const currentIndex = Checked.indexOf(value)\r\n\r\n        //전체 checked된 state에서 현재 누른 Checkbox가 이미 있다면\r\n        const newChecked = [...Checked]\r\n\r\n        //state에 넣어준다\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        }\r\n        //빼주고 \r\n        else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked)\r\n\r\n    }\r\n\r\n    const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox style={{margin: '10px'}} onChange={() => handleToggle(value._id)} \r\n                checked={Checked.indexOf(value._id) === -1 ? false : true} />\r\n                <span>{ value.name }</span>\r\n        </React.Fragment>\r\n    ))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Collapse defaultActiveKey={['1']}>\r\n                <Panel header=\"art filter\" key=\"1\">\r\n                    { renderCheckboxLists() }\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox","const continents = [\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"일러스트\"\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"도예/조각\"\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"회화/판화\"\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"조형\"\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"가구디자인\"\r\n    },\r\n    {\r\n        \"_id\": 6,\r\n        \"name\": \"미디어 아트\"\r\n    },\r\n    {\r\n        \"_id\": 7,\r\n        \"name\": \"사진\"\r\n    }\r\n]\r\n\r\nexport {\r\n    continents\r\n}","import React, {useState} from 'react'\r\nimport {Input} from 'antd';\r\n\r\nconst { Search } = Input;\r\n// const onSearch = value => console.log(value);\r\n\r\nfunction SearchFeature(props) {\r\n\r\n    const [SearchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const searchHandler = (event) => {\r\n        setSearchTerm(event.currentTarget.value)\r\n        props.refreshFunction(event.currentTarget.value)\r\n\r\n        // console.log('e', event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <div>\r\n                <Search\r\n                    placeholder=\"제목 또는 작가명을 검색하세요\"\r\n                    onChange={searchHandler}\r\n                    enterButton={'Search'}\r\n                    size={'large'}\r\n                    value={SearchTerm}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchFeature","import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport {\n    Icon,\n    Col,\n    Card,\n    Row,\n    Divider,\n    BackTop,\n} from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport ImageSlider from '../../utils/ImageSlider';\nimport Checkbox from './Sections/CheckBox';\nimport {continents} from './Sections/Datas';\nimport SearchFeature from './Sections/SearchFeature';\nimport SubscribeButton from '../MainPage/img/subscribeButton.png'\nimport Artwork from './img/artwork.png';\n\nfunction LandingPage() {\n\n    const [Products, setProducts] = useState([])\n    const [Skip, setSkip] = useState(0)\n    const [Limit, setLimit] = useState(9)\n    const [PostSize, setPostSize] = useState(0)\n    const [Filters, setFilters] = useState({\n        continents: []\n    })\n\n    const [SearchTerm, setSearchTerm] = useState(\"\")\n\n    //paginational\n    useEffect(() => {\n\n        let body = {\n            skip: Skip,\n            limit: Limit\n        }\n\n        getProducts(body)\n\n    }, [])\n\n    //loadMore\n    const getProducts = (body) => {\n        axios\n            .post('/api/product/products', body)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data) \n                    \n                    console.log('loadmore=', body.loadMore)\n                    // loadMoreHandler의 body를 가져온다. --> 값이 있으면 skip +\n                    // Limit 값을 불러와 게시물을 나타낸다\n                    if (body.loadMore) {\n                        setProducts([\n                            ...Products,\n                            ...response.data.productInfo\n                        ])\n                    } \n                    else {\n                        setProducts(response.data.productInfo)\n                    }\n                    setPostSize(response.data.postSize)\n                } else {\n                    alert(\"상품을 가져오는데 실패했습니다.\")\n                }\n            })\n    }\n\n    //더보기 버튼 res\n    const loadMoreHandler = () => {\n\n        let skip = Skip + Limit\n\n        let body = {\n            skip: skip,\n            limit: Limit,\n            loadMore: true\n            // loadMore: false\n        }\n\n        getProducts(body)\n        setSkip(skip)\n\n    }\n\n    const renderCards = Products.map((product, index) => {\n\n        console.log('product', product)\n\n        return <Col lg={8} md={12} xs={24} key={index}>\n\n            <Card\n                cover={<a href={`/product/${product._id}`}><ImageSlider images = {\n                    product.images\n                } /></a>}>\n                <Meta title={product.title} description={`${product.artist}`}/>\n            </Card>\n\n        </Col>\n    })\n\n    const showFilteredResults = (filters) => {\n        let body = {\n            skip: 0,\n            limit: Limit,\n            filters: filters\n        }\n\n        getProducts(body)\n        setSkip(0)\n    }\n\n    //id의 array가 filters에 담겨 있음.\n    const handleFilters = (filters, category) => {\n\n        const newFilters = {\n            ...Filters\n        }\n\n        //checkbox에서 check된 것들을 filters로 가져와 continent에 넣어준다\n        newFilters[category] = filters\n        showFilteredResults(newFilters)\n    }\n\n    //SearchFeaure.js에서 (event.currentTarget.value) <- 이 값을 가져온다\n    const updateSearchTerm = (newSearchTerm) => {\n\n        let body = {\n            skip: 0,\n            limit: Limit,\n            filters: Filters,\n            searchTerm: newSearchTerm\n        }\n\n        setSkip(0)\n        setSearchTerm(newSearchTerm)\n        getProducts(body)\n    }\n\n    const style = {\n        height: 40,\n        width: 40,\n        lineHeight: '40px',\n        borderRadius: 20,\n        backgroundColor: '#FFCD4A',\n        color: '#4C5472',\n        textAlign: 'center',\n        fontSize: 14,\n      };\n\n    return (\n        <div>\n            <img\n                src={Artwork}\n                alt='img'\n                style={{\n                    position: 'absolute',\n                    width: '100%',\n                    height: '560px',\n                    top: '50px',\n                    zIndex: 1\n                }}></img>\n            <div\n                style={{\n                    width: '60%',\n                    margin: '3rem auto'\n                }}>\n                <div\n                    style={{\n                        textAlign: 'center'\n                    }}>\n                    <h1\n                        style={{\n                            position: 'relative',\n                            padding: '100px 0px 0px 0px',\n                            color: '#FFF',\n                            zIndex: 10\n                        }}>ARTWORK</h1>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: '50%',\n                            margin: '1rem auto',\n                            zIndex: 10\n                        }}>\n                        <Divider/>\n                        <a\n                            href=\"/product/upload\"\n                            style={{\n                                color: 'white'\n                            }}>\n                            <Icon\n                                type=\"upload\"\n                                style={{\n                                    padding: '30px 0px 20px 0px',\n                                    fontSize: '50px',\n                                }}></Icon>\n                        </a>\n                    </div>\n                </div>\n\n                {/* Search */}\n\n                <div\n                    style={{\n                        position: 'relative',\n                        padding: '0px 0px 120px 0px',\n                        zIndex: 10,\n                    }}>\n                    <SearchFeature refreshFunction={updateSearchTerm}/>\n                </div>\n\n                {/* filter */}\n\n                {/* checkbox */}\n                {/* https://ant.design/components/tag/ */}\n                <div\n                    style={{\n                        position: 'relative',\n                        padding: '0px 0px 30px 0px',\n                        zIndex: 10\n                    }}>\n                    <Checkbox\n                        list={continents}\n                        handleFilters={filters => handleFilters(filters, \"continents\")}/>\n                </div>\n                <br/>\n\n                {/* Cards */}\n\n                <Row gutter={[50, 50]}>\n                    {renderCards}\n                </Row>\n                <br/>\n                <br/> {PostSize >= Limit && (\n                    <div\n                            style={{\n                                width: '100%',\n                                textAlign: 'center'\n                            }}>\n                            <button onClick={loadMoreHandler} \n                            style={{width: '130px', height: '40px', borderRadius: '10px', backgroundColor: '#7A8095', color: '#fff'}}>\n                                More ArtWork</button>\n                        </div>\n                        \n                )}\n                {/* backTop */}\n                {/* https://ant.design/components/back-top/ */}\n\n                <BackTop>\n                  <div style={style}>UP</div>\n                </BackTop>\n                <br/>\n                <br/>\n                <div\n                    style={{\n                        textAlign: 'center'\n                    }}>\n                    <a href='https://docs.google.com/forms/d/e/1FAIpQLSfFiOe9JIQNa3T70rDAB0herC2U88NSmGJ7I_NHc1XP24iXag/viewform'>\n                    <img\n                        src={SubscribeButton}\n                        alt='img'\n                        style={{\n                            width: '45%',\n                            padding: '100px 0px 20px 0px'\n                        }}></img></a>\n                    <h5\n                        style={{\n                            padding: '0px 0px 100px 0px'\n                        }}>나만의 온라인 전시회 페이지를 직접 신청해보세요.</h5>\n                </div>\n                </div>\n        </div>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.email);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>SIGN IN</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                {/* <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  비밀번호 찾기\n                  </a> */}\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                <a href=\"/register\" style={{float: 'right'}}>회원가입</a>\n                <a href=\"/service\" style={{float: 'left'}}>아이디/비밀번호 찾기</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n  Divider,\n} from 'antd';\n\nconst {TextArea} = Input;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        // ID: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n        number: '',\n        school: '',\n        college: '',\n        department: '',\n        nickname: '',\n        sns: '',\n        career: '',\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        number: Yup.string()\n          .required('Number is required'),\n        // ID: Yup.string()\n        //   .required('ID is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            // ID: values.ID,\n            number: values.number,\n            school: values.school,\n            college: values.college,\n            department: values.department,\n            nickname: values.nickname,\n            sns: values.sns,\n            career: values.career,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              alert(\"회원가입이 완료되었습니다.\")\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n\n        return (\n          <div className=\"app\" style={{ width: '60%', height: '100%', margin: '3rem auto', textAlign: 'center'}}>\n            <h2>SIGN UP</h2>\n            <div style={{ width: '375px' }}>\n            <Divider />\n            </div>\n            <h5>필수 입력 항목</h5>\n            <br />\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              {/* <Form.Item required label=\"아이디\" hasFeedback validateStatus={errors.ID && touched.ID ? \"error\" : 'success'}>\n                <Input\n                  id=\"ID\"\n                  placeholder=\"Enter your ID\"\n                  type=\"text\"\n                  value={values.ID}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.ID && touched.ID ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.ID && touched.ID && (\n                  <div className=\"input-feedback\">{errors.ID}</div>\n                )}\n              </Form.Item> */}\n\n              <Form.Item required label=\"E-mail\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호 확인\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"이름\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"연락처\">\n                <Input\n                  id=\"number\"\n                  placeholder=\"Enter your call number\"\n                  type=\"text\"\n                  value={values.number}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.number && touched.number ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.number && touched.number && (\n                  <div className=\"input-feedback\">{errors.number}</div>\n                )}\n              </Form.Item>\n\n              <Divider />\n              <h5 style={{textAlign: 'center'}}>선택 입력 항목</h5>\n              <Form.Item label=\"학교\">\n                <Input\n                  id=\"school\"\n                  placeholder=\"전체 학교명을 입력하세요\"\n                  type=\"text\"\n                  value={values.school}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Item>\n\n              <Form.Item label=\"단과대\">\n                <Input\n                  id=\"college\"\n                  placeholder=\"단과대를 입력하세요\"\n                  type=\"text\"\n                  value={values.college}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Item>\n\n              <Form.Item label=\"학과\">\n                <Input\n                  id=\"department\"\n                  placeholder=\"학과명을 입력하세요\"\n                  type=\"text\"\n                  value={values.department}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Item>\n\n              <Form.Item label=\"작가명\">\n                <Input\n                  id=\"nickname\"\n                  placeholder=\"작가명을 입력하세요\"\n                  type=\"text\"\n                  value={values.nickname}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Item>\n\n              <Form.Item label=\"SNS 계정\">\n                <Input\n                  id=\"sns\"\n                  placeholder=\"SNS 계정 주소를 입력하세요\"\n                  type=\"text\"\n                  value={values.sns}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Item>\n\n              <Form.Item label=\"경력\">\n                <TextArea\n                  id=\"career\"\n                  placeholder=\"경력을 입력하세요\"\n                  value={values.career}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react'\r\nimport MainImage from './img/mainImg.png';\r\nimport ExhibitionImage from './img/ExhibitionImg.jpg'\r\nimport SubscribeButton from './img/subscribeButton.png'\r\nimport {Divider, Card, Col, Row} from 'antd';\r\nimport {CaretRightOutlined} from '@ant-design/icons';\r\n\r\nconst {Meta} = Card;\r\n\r\nfunction MainPage() {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '60%',\r\n                margin: '3rem auto'\r\n            }}>\r\n            <div style={{\r\n                    textAlign: 'center'\r\n                }}>\r\n                <img\r\n                    src={MainImage}\r\n                    alt='img'\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: '80px 0px 80px 0px'\r\n                    }}></img>\r\n                <h2>EXHIBITION</h2>\r\n                <div\r\n                    style={{\r\n                        width: '50%',\r\n                        margin: '1rem auto'\r\n                    }}>\r\n                    <Divider/>\r\n                </div>\r\n                {/* cards */}\r\n                <br/>\r\n                <div style={{\r\n                        textAlign: 'left'\r\n                    }}>\r\n                    <Row gutter={[50, 50]}>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/1`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition1\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test1\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/2`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition2\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test2\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/3`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition3\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test3\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* button */}\r\n                <a href=\"/exhibition\">\r\n                    <h5\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}>More Exhibition\r\n                        <CaretRightOutlined/></h5>\r\n                </a>\r\n                <a href='https://docs.google.com/forms/d/e/1FAIpQLSfFiOe9JIQNa3T70rDAB0herC2U88NSmGJ7I_NHc1XP24iXag/viewform'>\r\n                    <img\r\n                        src={SubscribeButton}\r\n                        alt='img'\r\n                        style={{\r\n                            width: '45%',\r\n                            padding: '100px 0px 20px 0px'\r\n                        }}>\r\n                    </img>\r\n                </a>\r\n                <h5\r\n                    style={{\r\n                        padding: '0px 0px 100px 0px'\r\n                    }}>나만의 온라인 전시회 페이지를 직접 신청해보세요.</h5>\r\n                {/* <hr style={{width: '100%', padding: '0px', textAlign: 'left'}}></hr> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","import React from 'react';\r\nimport SubscribeButton from '../MainPage/img/subscribeButton.png';\r\nimport {BackTop, Divider, Card, Col, Row} from 'antd';\r\nimport ExhibitionImage from './img/exhibitImg.jpg';\r\nimport Exhibition from './img/Background.png';\r\n\r\nconst {Meta} = Card;\r\n\r\nfunction ExhibitPage() {\r\n\r\n    \r\n    const style = {\r\n        height: 40,\r\n        width: 40,\r\n        lineHeight: '40px',\r\n        borderRadius: 4,\r\n        backgroundColor: '#FFCD4A',\r\n        color: '#4C5472',\r\n        textAlign: 'center',\r\n        fontSize: 14,\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <img src={Exhibition} alt='img' style={{position: 'absolute', width: '100%', height: '560px', top: '50px', zIndex: 1}}></img>\r\n        <div\r\n            style={{\r\n                width: '60%',\r\n                margin: '3rem auto'\r\n            }}>\r\n            <div style={{\r\n                    textAlign: 'center'\r\n                }}>\r\n                <h1 style={{position:'relative', padding: '200px 0px 0px 0px', color: '#FFF', zIndex: 10}}>EXHIBITION</h1>\r\n                <div\r\n                    style={{\r\n                        position: 'relative',\r\n                        width: '50%',\r\n                        margin: '1rem auto',\r\n                        zIndex: 10\r\n                    }}>\r\n                    <Divider/>\r\n                </div>\r\n                {/* search */}\r\n\r\n\r\n\r\n                {/* filter */}\r\n\r\n\r\n\r\n                {/* cards */}\r\n                <div style={{ position: 'relative', padding: '130px 0px 0px 0px', textAlign: 'left', zIndex: 10 }}>\r\n                    <Row gutter={[50, 50]}>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/1`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition1\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test1\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/2`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition2\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test2\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/3`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition3\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test3\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/4`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition4\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test4\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/5`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition5\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test5\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/6`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition6\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test6\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/7`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition7\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test7\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/8`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition8\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test8\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                            {/* {ExhibitionImgCard} */}\r\n                            <div><a href={`/exhibition/9`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition9\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test9\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                        <Col lg={8} md={12} xs={22}>\r\n                        <div><a href={`/exhibition/10`}>\r\n                            <Card\r\n                                hoverable=\"hoverable\"\r\n                                style={{\r\n                                    width: '100%'\r\n                                }}\r\n                                cover={<img alt = \"exhibition10\" src = {\r\n                                    ExhibitionImage\r\n                                } />}>\r\n                                <Meta title=\"Title.\" description=\"This is the Test10\"/>\r\n                                <p/>\r\n                                <Meta title=\"Description.\" description=\"Jeong Yoona\"/>\r\n                            </Card>\r\n                            </a></div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                {/* skip */}\r\n                <br/>\r\n                <br/>\r\n                <div>\r\n                    {/* <Pagination onChange={loadMoreHandler} total={50} /> */}\r\n                    </div>\r\n\r\n                \r\n                {/* backTop */}\r\n                {/* https://ant.design/components/back-top/ */}\r\n\r\n                <BackTop>\r\n                  <div style={style}>UP</div>\r\n                </BackTop>\r\n\r\n\r\n                <br />\r\n                <br />\r\n                <div>\r\n                <a href='https://docs.google.com/forms/d/e/1FAIpQLSfFiOe9JIQNa3T70rDAB0herC2U88NSmGJ7I_NHc1XP24iXag/viewform'>\r\n                <img\r\n                    src={SubscribeButton}\r\n                    alt='img'\r\n                    style={{\r\n                        // display: 'flex',\r\n                        textAlign: 'center',\r\n                        // justifyContent: 'center',\r\n                        width: '45%',\r\n                        padding: '80px 0px 20px 0px'\r\n                    }}></img></a>\r\n                <h5\r\n                    style={{\r\n                        padding: '0px 0px 100px 0px'\r\n                    }}>나만의 온라인 전시회 페이지를 직접 신청해보세요.</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExhibitPage","import React from 'react'\r\nimport './UserCardBlock.css'\r\n\r\nfunction UserCardBlock(props) {\r\n    // console.log('props', props)\r\n    const renderItems = () => (\r\n        props.products && props.products.map((product, index) => (\r\n            // console.log(product)\r\n            <tr key={index}>\r\n                <td>\r\n                    <a href={`/product/${product._id}`}>{product.title}</a>\r\n                </td>\r\n                <td>\r\n                    {product.artist}\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.removeItem(product._id)}>remove</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n\r\n  return (\r\n    <div>\r\n        <table>\r\n            <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                    <th>Artwork Title</th>\r\n                    <th>Artwork Artist</th>\r\n                    <th>Remove from Library</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderItems()}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserCardBlock","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getLibItems, removeLibItem } from '../../../_actions/user_actions'\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport LibraryImg from './img/library.png'\r\n\r\nfunction Library(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        let libItems = []\r\n\r\n        //redux user state 안 library 안에 게시물이 들어있는지 확인\r\n        if (props.user.userData && props.user.userData.library) {\r\n            if (props.user.userData.library.length > 0) {\r\n                props.user.userData.library.forEach(item => {\r\n                    libItems.push(item.id)\r\n                })\r\n\r\n                dispatch(getLibItems(libItems, props.user.userData.library))\r\n            }\r\n        }\r\n    }, [props.user.userData])\r\n\r\n    let removeFromLib = (productId) => {\r\n        console.log('productId', productId)\r\n\r\n        dispatch(removeLibItem(productId))\r\n            .then(response => {\r\n            })\r\n\r\n    }\r\n    \r\n    console.log(props.user)\r\n    console.log('props.user.libDetail', props.user.libDetail)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <img \r\n        src={LibraryImg}\r\n        alt='img'\r\n        style={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '560px',\r\n            top: '50px',\r\n            zIndex: 1\r\n        }}\r\n        >\r\n        </img>\r\n        <div style={{ position: 'relative', width: '70%', margin: '3rem auto', textAlign: 'center', zIndex: 10}}>\r\n            <h1 style={{ color: '#fff', padding: '40px 0px 100px 0px'}}> Library </h1>\r\n            <div>\r\n                <UserCardBlock products={props.user.libDetail} removeItem={removeFromLib} />   \r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Library\r\n\r\n","import React from 'react';\nimport { Menu } from 'antd';\n\n// const SubMenu = Menu.SubMenu;\n// const MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"main\">\n        <a href=\"/\">ARTUDENT</a>\n      </Menu.Item>\n      <Menu.Item key=\"exhibition\">\n        <a href=\"/exhibition\">EXHIBITION</a>\n      </Menu.Item>\n      <Menu.Item key=\"artwork\">\n        <a href=\"/artwork\">ARTWORK</a>\n      </Menu.Item>\n      <Menu.Item key=\"library\">\n        <a href=\"/library\">LIBRARY</a>\n      </Menu.Item>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport {Menu} from 'antd';\nimport axios from 'axios';\nimport {USER_SERVER} from '../../../Config';\nimport {withRouter} from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\n\nfunction RightMenu(props) {\n    const user = useSelector(state => state.user)\n\n    const logoutHandler = () => {\n        axios\n            .get(`${USER_SERVER}/logout`)\n            .then(response => {\n                if (response.status === 200) {\n                    props\n                        .history\n                        .push(\"/login\");\n                } else {\n                    alert('Log Out Failed')\n                }\n            });\n    };\n\n    //right nav-bar\n\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                {/* <Menu.Item key=\"main\">\n                    <a href=\"/\">Home</a>\n                </Menu.Item> */}\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\">SIGN-IN</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\">SIGN-UP</a>\n                </Menu.Item>\n            </Menu>\n        )\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                {/* <Menu.Item key=\"mail\">\n                    <a href=\"/\">Home</a>\n                </Menu.Item> */}\n                <Menu.Item key=\"mypage\">\n                    <a href=\"/mypage\">MY</a>\n                </Menu.Item>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler}>LOG OUT</a>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport Logo from './Sections/img/AA.png'\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 15, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">\n          <img style={{ width: '100px' }} src={Logo} alt='img'></img>\n        </a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Artudent\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\nimport Logo from './img/AA.png';\n\nfunction Footer() {\n    return (\n        <div\n            style={{\n                width: '100%',\n                height: '160px',\n                display: 'block',\n                background: '#7A8095'\n            }}>\n\n            <img\n                style={{\n                    height: '70px',\n                    display: 'flex',\n                    float: 'left',\n                    margin: '45px'\n                }}\n                src={Logo}\n                alt='img'></img>\n\n            <div\n                style={{\n                    textAlign: 'right',\n                    fontSize: '14px',\n                    float: 'right',\n                    margin: '30px'\n                }}>\n                <p>고객 문의</p>\n                <a href='https://artudent.creatorlink.net/ABOUT' style={{color: 'black'}}>\n                    <p>About Artudent</p>\n                </a>\n                <Icon type=\"copyright\"></Icon>\n                COPYRIGHT ALL RIGHT RESERVED\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, {useState} from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport {Icon} from 'antd';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n\r\n        const config = {\r\n            header: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios\r\n            .post('/api/product/image', formData, config)\r\n            .then(response => {\r\n                //불러오는 사진 정보를 가져온다.\r\n                if (response.data.success) {\r\n                    console.log(response.data)\r\n\r\n                    setImages([\r\n                        ...Images,\r\n                        response.data.filePath\r\n                    ])\r\n                    props.refreshFunction([\r\n                        ...Images,\r\n                        response.data.filePath\r\n                    ])\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const deleteHandler = (image) => {\r\n\r\n        const currentIndex = Images.indexOf(image)\r\n\r\n        let newImages = [...Images]\r\n        // currentIndex 에서 하나의 index를 지운다 (currentIndex의 index 번호가 부여된 하나를 없앤다.) when we\r\n        // click the image -> the image index have to splice\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n        // console.log('currentIndex', currentIndex)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n            }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {\r\n                    ({getRootProps, getInputProps}) => (\r\n                        <div\r\n                            style={{\r\n                                width: 300,\r\n                                height: 240,\r\n                                border: '1px solid lightgray',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}\r\n                            {...getRootProps()}>\r\n                            <input {...getInputProps()}/>\r\n                            <Icon\r\n                                type=\"plus\"\r\n                                style={{\r\n                                    fontSize: '3rem'\r\n                                }}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </Dropzone>\r\n\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    width: '350px',\r\n                    height: '240px',\r\n                    overflowX: 'scroll'\r\n                }}>\r\n\r\n                {\r\n                    Images.map((image, index) => (\r\n                        <div onClick={() => deleteHandler(image)} key={index}>\r\n                            <img\r\n                                style={{\r\n                                    minWidth: '300px',\r\n                                    width: '300px',\r\n                                    height: '240px'\r\n                                }}\r\n                                alt='img'\r\n                                src={`http://localhost:5000/${image}`}/>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload","import React, {useState} from 'react'\r\nimport {Button, Divider, Form, Input, Radio, Modal} from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport Axios from 'axios';\r\nimport {Select} from 'antd';\r\nimport Upload from './img/upload.png'\r\n\r\nconst {Option} = Select;\r\nconst {TextArea} = Input;\r\n\r\nconst Continents = [\r\n    {\r\n        key: 1,\r\n        value: \"일러스트\"\r\n    }, {\r\n        key: 2,\r\n        value: \"도예/조각\"\r\n    }, {\r\n        key: 3,\r\n        value: \"회화/판화\"\r\n    }, {\r\n        key: 4,\r\n        value: \"조형\"\r\n    }, {\r\n        key: 5,\r\n        value: \"가구 디자인\"\r\n    }, {\r\n        key: 6,\r\n        value: \"미디어 아트\"\r\n    }, {\r\n        key: 7,\r\n        value: \"사진\"\r\n    }\r\n]\r\n\r\nfunction UploadProductPage(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Artist, setArtist] = useState(\"\")\r\n    const [Tech, setTech] = useState(\"\")\r\n    const [Dimensions, setDimensions] = useState(\"\")\r\n    const [Year, setYear] = useState(\"\")\r\n    const [Continent, setContinent] = useState([])\r\n    const [Images, setImages] = useState([])\r\n    const [SNS, setSNS] = useState(true)\r\n    const [IsModal, setIsModal] = useState(false)\r\n    const [PersonalInfo, setPersonalInfo] = useState(true)\r\n\r\n    //모두 다 모달창\r\n    const showModal = () => {\r\n        setIsModal(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n    setIsModal(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n    setIsModal(false);\r\n    };\r\n\r\n    //입력 가능하게 진행\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n    const artistChangeHandler = (event) => {\r\n        setArtist(event.currentTarget.value)\r\n    }\r\n    const techChangeHandler = (event) => {\r\n        setTech(event.currentTarget.value)\r\n    }\r\n    const dimensionsChangeHandler = (event) => {\r\n        setDimensions(event.currentTarget.value)\r\n    }\r\n    const yearChangeHandler = (event) => {\r\n        setYear(event.currentTarget.value)\r\n    }\r\n    const continentChangeHandler = (value) => {\r\n        setContinent(value)\r\n        \r\n        // console.log(`selected ${value}`);\r\n    }\r\n    const snsCheckedHandler = (event) => {\r\n        // console.log(event.target.checked, event.target.value)\r\n        setSNS(event.target.value)\r\n    }\r\n    const modalCheckedHandler = (event) => {\r\n        setPersonalInfo(event.target.value)\r\n    }\r\n    //FileUpload.js에서 이미지 정보를 가져온다\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n    const submitHandler = (event) => {\r\n        //페이지 리프레시 방지\r\n        event.preventDefault();\r\n        //모든 state가 채워지지 않으면 리턴되지 않도록 함\r\n        if (!Title || !Description || !Artist || !Images || !Tech || !Dimensions || !Continent) {\r\n            return alert(\"모든 값을 넣어주세요.\")\r\n        }   \r\n        if (Continent.length > 1) {\r\n            return alert(\"한개의 태그를 입력해주세요.\")\r\n        }\r\n        if (PersonalInfo === false) {\r\n            return alert(\"개인정보이용에 동의하지 않으시면 게시물을 업로드하실 수 없습니다.\")\r\n        }\r\n\r\n        //서버에 채운 값들을 req로 보낸다.\r\n        const body = {\r\n            //writer -> 로그인한 사람의 id - auth.js에 있는 user 정보를 가져온다\r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            artist: Artist,\r\n            tech: Tech,\r\n            dimensions: Dimensions,\r\n            year: Year,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent,\r\n            snsCheck: SNS,\r\n            personalInfo: PersonalInfo\r\n        }\r\n\r\n        // console.log('body', body)\r\n\r\n        Axios\r\n            .post(\"/api/product\", body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공했습니다.')\r\n                    //상품 업로드에 성공하면 바로 메인 페이지로 넘어가게 한다\r\n                    props\r\n                        .history\r\n                        .push('/artwork')\r\n                } else {\r\n                    alert('상품 업로드에 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    console.log('checked=', SNS)\r\n    console.log('checked=', PersonalInfo)\r\n\r\n    return (\r\n        <div>\r\n            <img\r\n                src={Upload}\r\n                alt='img'\r\n                style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    top: '50px',\r\n                    zIndex: 1\r\n                }}></img>\r\n            <div\r\n                style={{\r\n                    position: 'relative',\r\n                    maxWidth: '700px',\r\n                    margin: '2rem auto',\r\n                    zIndex: 10\r\n                }}>\r\n                <div\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginBottom: '2rem'\r\n                    }}>\r\n                    <h1\r\n                        style={{\r\n                            position: 'relative',\r\n                            padding: '180px 0px 0px 0px',\r\n                            color: '#fff',\r\n                            zIndex: 10\r\n                        }}>Upload Your Artwork</h1>\r\n                    <div\r\n                        style={{\r\n                            position: 'relative',\r\n                            width: '50%',\r\n                            margin: '1rem auto'\r\n                        }}>\r\n                        <Divider/>\r\n                    </div>\r\n                    <h5\r\n                        style={{\r\n                            color: '#fff'\r\n                        }}>반드시 자신이 제작한 작품을 등록해주세요.</h5>\r\n                    <h5\r\n                        style={{\r\n                            color: '#fff'\r\n                        }}>타인의 저작권 및 인권을 침해하는 사진을 업로드 시, 불이익을 당할 수 있습니다.</h5>\r\n                    <h4\r\n                        style={{\r\n                            padding: '180px 0px 0px 0px'\r\n                        }}>사진을 클릭하면 삭제됩니다.</h4>\r\n                </div>\r\n\r\n                <Form onSubmitCapture={submitHandler}>\r\n\r\n                    <FileUpload refreshFunction={updateImages}/>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>Title</h3>\r\n                    </div>\r\n                    <Input\r\n                        placeholder=\"작품의 제목을 입력해주세요.\"\r\n                        onChange={titleChangeHandler}\r\n                        value={Title}\r\n                        style={{\r\n                            height: '50px',\r\n                            boxShadow: '5px 5px 5px #e5e5e5'\r\n                        }}/>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>Artist</h3>\r\n                    </div>\r\n                    <Input\r\n                        placeholder=\"작가명을 입력해주세요.\"\r\n                        onChange={artistChangeHandler}\r\n                        value={Artist}\r\n                        style={{\r\n                            height: '50px',\r\n                            boxShadow: '5px 5px 5px #e5e5e5'\r\n                        }}/>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>Technique</h3>\r\n                    </div>\r\n                    <Input\r\n                        placeholder=\"작품의 소재 또는 기법을 입력해주세요.\"\r\n                        onChange={techChangeHandler}\r\n                        value={Tech}\r\n                        style={{\r\n                            height: '50px',\r\n                            boxShadow: '5px 5px 5px #e5e5e5'\r\n                        }}/>\r\n                    <h5\r\n                        style={{\r\n                            padding: '15px 0px 0px 0px',\r\n                            color: '#c4c4c4'\r\n                        }}>예시) 붓, 물감 / 합성 소재 위 붓 그림.</h5>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '30px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>Dimensions</h3>\r\n                    </div>\r\n                    <Input\r\n                        placeholder=\"작품 사이즈를 입력해주세요.\"\r\n                        onChange={dimensionsChangeHandler}\r\n                        value={Dimensions}\r\n                        style={{\r\n                            height: '50px',\r\n                            boxShadow: '5px 5px 5px #e5e5e5'\r\n                        }}/>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>Year</h3>\r\n                    </div>\r\n                    <Input\r\n                        placeholder=\"작품 제작 년도를 입력해주세요\"\r\n                        type=\"number\"\r\n                        onChange={yearChangeHandler}\r\n                        value={Year}\r\n                        style={{\r\n                            height: '50px',\r\n                            boxShadow: '5px 5px 5px #e5e5e5'\r\n                        }}/>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>Description</h3>\r\n                    </div>\r\n                    <TextArea\r\n                        placeholder=\"작품 설명을 입력해주세요.\"\r\n                        onChange={descriptionChangeHandler}\r\n                        value={Description}\r\n                        style={{\r\n                            height: '200px',\r\n                            boxShadow: '5px 5px 5px #e5e5e5'\r\n                        }}/>\r\n\r\n                    <div\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px'\r\n                        }}>\r\n                        <h3\r\n                            style={{\r\n                                textDecoration: 'underline',\r\n                                textUnderlinePosition: 'under'\r\n                            }}>#Tag</h3>\r\n                    </div>\r\n\r\n                    <Select\r\n                        onChange={continentChangeHandler}\r\n                        value={Continent}\r\n                        >\r\n                        {\r\n                            Continents.map(item => (\r\n                                <Option key={item.key} value={item.key}>\r\n                                    {item.value}\r\n                                </Option>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n\r\n                    <h3\r\n                        style={{\r\n                            padding: '50px 0px 0px 0px',\r\n                            textDecoration: 'underline',\r\n                            textUnderlinePosition: 'under'\r\n                        }}>SNS 홍보 동의</h3>\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            height: '100px',\r\n                            boxShadow: '5px 5px 25px 10px #e5e5e5',\r\n                            textAlign: 'center'\r\n                        }}>\r\n                        <h4\r\n                            style={{\r\n                                padding: '22px 0px 0px 0px',\r\n                                color: 'gray'\r\n                            }}>동의할 시, 해당 작품의 이미지 및 정보, 작가 정보가</h4>\r\n                        <h4\r\n                            style={{\r\n                                color: 'gray'\r\n                            }}>Artudent 인스타그램 계정에 홍보용으로 업로드 될 수 있습니다.</h4>\r\n                    </div>\r\n                    <div style={{padding: '30px 0px 0px 0px', textAlign: 'center'}}>\r\n                    <Radio.Group onChange={snsCheckedHandler} value={SNS}>\r\n                        <Radio value={true}>동의</Radio>\r\n                        <Radio value={false}>비동의</Radio>\r\n                    </Radio.Group>\r\n                    </div>\r\n\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <h3\r\n                        style={{\r\n                            padding: '20px 0px 0px 0px',\r\n                            textDecoration: 'underline',\r\n                            textUnderlinePosition: 'under'\r\n                        }}>개인정보 수집 및 이용 동의</h3>\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            height: '100px',\r\n                            boxShadow: '5px 5px 25px 10px #e5e5e5',\r\n                            textAlign: 'center'\r\n                        }}>\r\n                        <h4\r\n                            style={{\r\n                                padding: '22px 0px 0px 0px',\r\n                                color: 'gray'\r\n                            }}>개인정보 처리방침</h4>\r\n                        <Button type=\"ghost\" onClick={showModal}>\r\n                            더보기\r\n                        </Button>\r\n                        <Modal title=\"Artudent 개인정보처리방침\" visible={IsModal} onOk={handleOk} onCancel={handleCancel}>\r\n                        <div>\r\n                            <p>&lt; ARTUDENT &gt; (&#39;www.artudent.co.kr&#39;이하 &#39;ARTUDENT&#39;)은(는) 「개인정보 보호법」 제30조에 따라 정보주체의 개인정보를 보호하고 이와 관련한 고충을 신속하고 원활하게 처리할 수 있도록 하기 위하여 다음과 같이 개인정보 처리방침을 수립·공개합니다.</p>\r\n                            <p>○ 이 개인정보처리방침은 2021년 7월 01일부터 적용됩니다.</p>\r\n                            <p>제1조(개인정보의 처리 목적)</p>\r\n                            <p>&lt; ARTUDENT &gt; (&#39;www.artudent.co.kr&#39;이하 &#39;ARTUDENT&#39;)은(는) 다음의 목적을 위하여 개인정보를 처리합니다. 처리하고 있는 개인정보는 다음의 목적 이외의 용도로는 이용되지 않으며 이용 목적이 변경되는 경우에는 「개인정보 보호법」 제18조에 따라 별도의 동의를 받는 등 필요한 조치를 이행할 예정입니다.</p>\r\n                            <ol>\r\n                            <li>홈페이지 회원가입 및 관리</li>\r\n                            </ol>\r\n                            <p>회원 가입의사 확인, 회원제 서비스 제공에 따른 본인 식별·인증, 회원자격 유지·관리, 서비스 부정이용 방지, 각종 고지·통지 목적으로 개인정보를 처리합니다.</p>\r\n                            <ol>\r\n                            <li>민원사무 처리</li>\r\n                            </ol>\r\n                            <p>민원인의 신원 확인, 민원사항 확인, 사실조사를 위한 연락·통지, 처리결과 통보 목적으로 개인정보를 처리합니다.</p>\r\n                            <ol>\r\n                            <li>재화 또는 서비스 제공</li>\r\n                            </ol>\r\n                            <p>서비스 제공, 계약서·청구서 발송, 콘텐츠 제공, 맞춤서비스 제공, 본인인증, 연령인증, 요금결제·정산을 목적으로 개인정보를 처리합니다.</p>\r\n                            <ol>\r\n                            <li>마케팅 및 광고에의 활용</li>\r\n                            </ol>\r\n                            <p>신규 서비스(제품) 개발 및 맞춤 서비스 제공, 이벤트 및 광고성 정보 제공 및 참여기회 제공 , 인구통계학적 특성에 따른 서비스 제공 및 광고 게재 , 서비스의 유효성 확인, 접속빈도 파악 또는 회원의 서비스 이용에 대한 통계 등을 목적으로 개인정보를 처리합니다.</p>\r\n                            <p>제2조(개인정보의 처리 및 보유 기간)\r\n                            ① &lt; ARTUDENT &gt;은(는) 법령에 따른 개인정보 보유·이용기간 또는 정보주체로부터 개인정보를 수집 시에 동의받은 개인정보 보유·이용기간 내에서 개인정보를 처리·보유합니다.\r\n                            ② 각각의 개인정보 처리 및 보유 기간은 다음과 같습니다.</p>\r\n                            <p>1.&lt;홈페이지 회원가입 및 관리&gt;\r\n                            &lt;홈페이지 회원가입 및 관리&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터 3년 까지 위 이용목적을 위하여 보유.이용됩니다.\r\n                            보유근거 : 기간 내 회원정보에 대한 관리 및 신원확인을 하기 위함\r\n                            관련법령 : 1)신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\r\n                            2) 계약 또는 청약철회 등에 관한 기록 : 5년\r\n                            예외사유 : 회사가 망할 시 즉시폐기, 회원탈퇴 시 6개월 후 폐기\r\n                            2.&lt;민원사무 처리&gt;\r\n                            &lt;민원사무 처리&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터 3년 까지 위 이용목적을 위하여 보유.이용됩니다.\r\n                            보유근거 : 기간 내 소비자의 불만 또는 분쟁처리를 하기 위함\r\n                            관련법령 : 소비자의 불만 또는 분쟁처리에 관한 기록 : 3년\r\n                            예외사유 : 없음\r\n                            3.&lt;재화 또는 서비스 제공&gt;\r\n                            &lt;재화 또는 서비스 제공&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터 3년 까지 위 이용목적을 위하여 보유.이용됩니다.\r\n                            보유근거 : 계약 이후 서비스 집행에 따른 기록보유\r\n                            관련법령 : 1)신용정보의 수집/처리 및 이용 등에 관한 기록 : 3년\r\n                            2) 계약 또는 청약철회 등에 관한 기록 : 5년\r\n                            1)대금결제 및 재화 등의 공급에 관한 기록 : 5년\r\n                            2) 계약 또는 청약철회 등에 관한 기록 : 5년\r\n                            예외사유 : 없음\r\n                            4.&lt;마케팅 및 광고에의 활용&gt;\r\n                            &lt;마케팅 및 광고에의 활용&gt;와 관련한 개인정보는 수집.이용에 관한 동의일로부터 1년 까지 위 이용목적을 위하여 보유.이용됩니다.\r\n                            보유근거 : 마케팅 및 서비스 참여 정보 제공\r\n                            관련법령 : 표시/광고에 관한 기록 : 6개월\r\n                            예외사유 : 없음</p>\r\n                            <p>제3조(개인정보의 제3자 제공)\r\n                            ① &lt; ARTUDENT &gt;은(는) 개인정보를 제1조(개인정보의 처리 목적)에서 명시한 범위 내에서만 처리하며, 정보주체의 동의, 법률의 특별한 규정 등 「개인정보 보호법」 제17조 및 제18조에 해당하는 경우에만 개인정보를 제3자에게 제공합니다.\r\n                            ② ARTUDENT 은(는) 다음과 같이 개인정보를 제3자에게 제공하고 있습니다.</p>\r\n                            <ol>\r\n                            <li>&lt;전시회 참가 시 전시회 운영 주체 및 담당자&gt;\r\n                            개인정보를 제공받는 자 : 전시회 참가 시 전시회 운영 주체 및 담당자\r\n                            제공받는 자의 개인정보 이용목적 : 성별, 이름, 직업, 학교, 학과, 작품사진, 재료 등 작품정보\r\n                            제공받는 자의 보유.이용기간: 전시회 진행 기간</li>\r\n                            <li>&lt;시장조사 용역업체&gt;\r\n                            개인정보를 제공받는 자 : 시장조사 용역업체\r\n                            제공받는 자의 개인정보 이용목적 : 성별, 직업, 서비스 이용 기록, 접속 로그, 쿠키, 결제기록, , 작품종류, 학교, 학과\r\n                            제공받는 자의 보유.이용기간: 회원 탈퇴 후 1년</li>\r\n                            </ol>\r\n                            <p>제4조(개인정보처리 위탁)</p>\r\n                            <p>① &lt; ARTUDENT &gt;은(는) 원활한 개인정보 업무처리를 위하여 다음과 같이 개인정보 처리업무를 위탁하고 있습니다.</p>\r\n                            <ol>\r\n                            <li>&lt;없음&gt;\r\n                            위탁받는 자 (수탁자) : 없음\r\n                            위탁하는 업무의 내용 :\r\n                            위탁기간 :\r\n                            ② 은(는) 위탁계약 체결시 「개인정보 보호법」 제26조에 따라 위탁업무 수행목적 외 개인정보 처리금지, 기술적․관리적 보호조치, 재위탁 제한, 수탁자에 대한 관리․감독, 손해배상 등 책임에 관한 사항을 계약서 등 문서에 명시하고, 수탁자가 개인정보를 안전하게 처리하는지를 감독하고 있습니다.</li>\r\n                            </ol>\r\n                            <p>③ 위탁업무의 내용이나 수탁자가 변경될 경우에는 지체없이 본 개인정보 처리방침을 통하여 공개하도록 하겠습니다.</p>\r\n                            <p>제5조(정보주체와 법정대리인의 권리·의무 및 그 행사방법)</p>\r\n                            <p>① 정보주체는 ARTUDENT에 대해 언제든지 개인정보 열람·정정·삭제·처리정지 요구 등의 권리를 행사할 수 있습니다.</p>\r\n                            <p>② 제1항에 따른 권리 행사는ARTUDENT에 대해 「개인정보 보호법」 시행령 제41조제1항에 따라 서면, 전자우편, 모사전송(FAX) 등을 통하여 하실 수 있으며 ARTUDENT은(는) 이에 대해 지체 없이 조치하겠습니다.</p>\r\n                            <p>③ 제1항에 따른 권리 행사는 정보주체의 법정대리인이나 위임을 받은 자 등 대리인을 통하여 하실 수 있습니다.이 경우 “개인정보 처리 방법에 관한 고시(제2020-7호)” 별지 제11호 서식에 따른 위임장을 제출하셔야 합니다.</p>\r\n                            <p>④ 개인정보 열람 및 처리정지 요구는 「개인정보 보호법」 제35조 제4항, 제37조 제2항에 의하여 정보주체의 권리가 제한 될 수 있습니다.</p>\r\n                            <p>⑤ 개인정보의 정정 및 삭제 요구는 다른 법령에서 그 개인정보가 수집 대상으로 명시되어 있는 경우에는 그 삭제를 요구할 수 없습니다.</p>\r\n                            <p>⑥ ARTUDENT은(는) 정보주체 권리에 따른 열람의 요구, 정정·삭제의 요구, 처리정지의 요구 시 열람 등 요구를 한 자가 본인이거나 정당한 대리인인지를 확인합니다.</p>\r\n                            <p>제6조(처리하는 개인정보의 항목 작성)</p>\r\n                            <p>① &lt; ARTUDENT &gt;은(는) 다음의 개인정보 항목을 처리하고 있습니다.</p>\r\n                            <p>1&lt; 홈페이지 회원가입 및 관리 &gt;\r\n                            필수항목 : 이메일, 휴대전화번호, 성별, 이름, 서비스 이용 기록, 접속 로그, 쿠키, 결제기록, 학교정보, 작가정보\r\n                            선택항목 :\r\n                            2&lt; 민원사무 처리 &gt;\r\n                            필수항목 : 이메일, 휴대전화번호, 성별, 이름, 서비스 이용 기록\r\n                            선택항목 :\r\n                            3&lt; 재화 또는 서비스 제공 &gt;\r\n                            필수항목 : 성별, 이름, 서비스 이용 기록, 접속 로그, 쿠키, 결제기록\r\n                            선택항목 :\r\n                            4&lt; 마케팅 및 광고에의 활용 &gt;\r\n                            필수항목 : 이메일, 휴대전화번호, 성별, 생년월일, 이름, 서비스 이용 기록, 접속 로그\r\n                            선택항목 :</p>\r\n                            <p>제7조(개인정보의 파기)</p>\r\n                            <p>① &lt; ARTUDENT &gt; 은(는) 개인정보 보유기간의 경과, 처리목적 달성 등 개인정보가 불필요하게 되었을 때에는 지체없이 해당 개인정보를 파기합니다.</p>\r\n                            <p>② 정보주체로부터 동의받은 개인정보 보유기간이 경과하거나 처리목적이 달성되었음에도 불구하고 다른 법령에 따라 개인정보를 계속 보존하여야 하는 경우에는, 해당 개인정보를 별도의 데이터베이스(DB)로 옮기거나 보관장소를 달리하여 보존합니다.</p>\r\n                            <ol>\r\n                            <li>법령 근거 :</li>\r\n                            <li>보존하는 개인정보 항목 : 계좌정보, 거래날짜</li>\r\n                            </ol>\r\n                            <p>③ 개인정보 파기의 절차 및 방법은 다음과 같습니다.</p>\r\n                            <ol>\r\n                            <li><p>파기절차\r\n                            &lt; ARTUDENT &gt; 은(는) 파기 사유가 발생한 개인정보를 선정하고, &lt; ARTUDENT &gt; 의 개인정보 보호책임자의 승인을 받아 개인정보를 파기합니다.</p>\r\n                            </li>\r\n                            <li><p>파기방법</p>\r\n                            </li>\r\n                            </ol>\r\n                            <p>전자적 파일 형태의 정보는 기록을 재생할 수 없는 기술적 방법을 사용합니다</p>\r\n                            <p>제8조(개인정보의 안전성 확보 조치)</p>\r\n                            <p>&lt; ARTUDENT &gt;은(는) 개인정보의 안전성 확보를 위해 다음과 같은 조치를 취하고 있습니다.</p>\r\n                            <ol>\r\n                            <li><p>개인정보 취급 직원의 최소화 및 교육\r\n                            개인정보를 취급하는 직원을 지정하고 담당자에 한정시켜 최소화 하여 개인정보를 관리하는 대책을 시행하고 있습니다.</p>\r\n                            </li>\r\n                            <li><p>내부관리계획의 수립 및 시행\r\n                            개인정보의 안전한 처리를 위하여 내부관리계획을 수립하고 시행하고 있습니다.</p>\r\n                            </li>\r\n                            <li><p>접속기록의 보관 및 위변조 방지\r\n                            개인정보처리시스템에 접속한 기록을 최소 6개월 이상 보관, 관리하고 있으며, 접속 기록이 위변조 및 도난, 분실되지 않도록 보안기능 사용하고 있습니다.</p>\r\n                            </li>\r\n                            <li><p>개인정보에 대한 접근 제한\r\n                            개인정보를 처리하는 데이터베이스시스템에 대한 접근권한의 부여,변경,말소를 통하여 개인정보에 대한 접근통제를 위하여 필요한 조치를 하고 있으며 침입차단시스템을 이용하여 외부로부터의 무단 접근을 통제하고 있습니다.</p>\r\n                            </li>\r\n                            <li><p>문서보안을 위한 잠금장치 사용\r\n                            개인정보가 포함된 서류, 보조저장매체 등을 잠금장치가 있는 안전한 장소에 보관하고 있습니다.</p>\r\n                            </li>\r\n                            <li><p>비인가자에 대한 출입 통제\r\n                            개인정보를 보관하고 있는 물리적 보관 장소를 별도로 두고 이에 대해 출입통제 절차를 수립, 운영하고 있습니다.</p>\r\n                            </li>\r\n                            </ol>\r\n                            <p>제9조(개인정보 자동 수집 장치의 설치•운영 및 거부에 관한 사항)</p>\r\n                            <p>ARTUDENT 은(는) 정보주체의 이용정보를 저장하고 수시로 불러오는 ‘쿠키(cookie)’를 사용하지 않습니다.</p>\r\n                            <p>제10조 (개인정보 보호책임자)</p>\r\n                            <p>① ARTUDENT 은(는) 개인정보 처리에 관한 업무를 총괄해서 책임지고, 개인정보 처리와 관련한 정보주체의 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자를 지정하고 있습니다.</p>\r\n                            <ul>\r\n                            <li><p>개인정보 보호책임자\r\n                            성명 :허지민\r\n                            직책 :팀장\r\n                            직급 :팀장\r\n                            연락이메일 : jmking0428@naver.com\r\n                            ※ 개인정보 보호 담당부서로 연결됩니다.</p>\r\n                            </li>\r\n                            <li><p>개인정보 보호 담당부서\r\n                            부서명 :기획팀\r\n                            담당자 :허지민\r\n                            연락이메일 : jmking0428@naver.com\r\n                            ② 정보주체께서는 ARTUDENT 의 서비스(또는 사업)을 이용하시면서 발생한 모든 개인정보 보호 관련 문의, 불만처리, 피해구제 등에 관한 사항을 개인정보 보호책임자 및 담당부서로 문의하실 수 있습니다. ARTUDENT 은(는) 정보주체의 문의에 대해 지체 없이 답변 및 처리해드릴 것입니다.</p>\r\n                            </li>\r\n                            </ul>\r\n                            <p>제11조(개인정보 열람청구)\r\n                            정보주체는 ｢개인정보 보호법｣ 제35조에 따른 개인정보의 열람 청구를 아래의 부서에 할 수 있습니다.\r\n                            은(는) 정보주체의 개인정보 열람청구가 신속하게 처리되도록 노력하겠습니다.</p>\r\n                            <ul>\r\n                            <li>개인정보 열람청구 접수·처리 부서\r\n                            부서명 : 기획팀\r\n                            담당자 : 허지민\r\n                            연락처 : 010-4704-1074, jmking0428@naver.com,</li>\r\n                            </ul>\r\n                            <p>제12조(권익침해 구제방법)</p>\r\n                            <p>정보주체는 개인정보침해로 인한 구제를 받기 위하여 개인정보분쟁조정위원회, 한국인터넷진흥원 개인정보침해신고센터 등에 분쟁해결이나 상담 등을 신청할 수 있습니다. 이 밖에 기타 개인정보침해의 신고, 상담에 대하여는 아래의 기관에 문의하시기 바랍니다.</p>\r\n                            <ol>\r\n                            <li>개인정보분쟁조정위원회 : (국번없이) 1833-6972 (www.kopico.go.kr)</li>\r\n                            <li>개인정보침해신고센터 : (국번없이) 118 (privacy.kisa.or.kr)</li>\r\n                            <li>대검찰청 : (국번없이) 1301 (www.spo.go.kr)</li>\r\n                            <li>경찰청 : (국번없이) 182 (cyberbureau.police.go.kr)</li>\r\n                            </ol>\r\n                            <p>「개인정보보호법」제35조(개인정보의 열람), 제36조(개인정보의 정정·삭제), 제37조(개인정보의 처리정지 등)의 규정에 의한 요구에 대 하여 공공기관의 장이 행한 처분 또는 부작위로 인하여 권리 또는 이익의 침해를 받은 자는 행정심판법이 정하는 바에 따라 행정심판을 청구할 수 있습니다.</p>\r\n                            <p>※ 행정심판에 대해 자세한 사항은 중앙행정심판위원회(www.simpan.go.kr) 홈페이지를 참고하시기 바랍니다.</p>\r\n                            <p>제13조(개인정보 처리방침 변경)</p>\r\n                            <p>① 이 개인정보처리방침은 2021년 7월 17일부터 적용됩니다. </p>\r\n                        </div>\r\n                        </Modal>\r\n                    </div>\r\n                    <div style={{padding: '30px 0px 0px 0px', textAlign: 'center'}}>\r\n                    <Radio.Group onChange={modalCheckedHandler} value={PersonalInfo}>\r\n                        <Radio value={true}>동의</Radio>\r\n                        <Radio value={false}>비동의</Radio>\r\n                    </Radio.Group>\r\n                    </div>\r\n                    <div style={{textAlign: 'center', padding: '50px 0px 100px 0px'}}>\r\n                    <div style={{float: 'left', marginLeft: '250px'}}>\r\n                    <Button type=\"ghost\" htmlType='submit'>\r\n                        등록\r\n                    </Button>\r\n                    </div>\r\n                    <div style={{float: 'right', marginRight: '250px'}}>\r\n                    <Button type=\"ghost\">\r\n                        <a href={`/artwork`}>\r\n                            취소\r\n                        </a>\r\n                    </Button>\r\n                    </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProductPage","import React from 'react'\r\nimport '../../Library/Sections/UserCardBlock.css'\r\n\r\nfunction MyUpload(props) {\r\n  console.log(props)\r\n\r\n  const renderItems = () => (\r\n    props.product && props.product.map((Product, idx) => (\r\n      // console.log('Product', Product)\r\n      <tr key={idx}>\r\n          <td>\r\n              <a href={`/product/${Product._id._id}`}>{Product.title}</a>\r\n          </td>\r\n          <td>\r\n              {Product.artist}\r\n          </td>\r\n          {/* <td>\r\n              <button onClick={() => props.removeItem(Product._id)}>remove</button>\r\n          </td> */}\r\n      </tr>\r\n    ))\r\n  )\r\n\r\n  return (\r\n    <div style={{ marginBottom: '50px'}}>\r\n      <table>\r\n            <thead>\r\n                <tr style={{ textAlign: 'center' }}>\r\n                    <th>Title</th>\r\n                    <th>Artist</th>\r\n                    {/* <th>Remove</th> */}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderItems()}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyUpload","import React from 'react'\r\nimport { Collapse } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\n\r\nfunction FAQ() {\r\n  return (\r\n    <div style={{marginBottom: '30px', textAlign: 'left'}}>\r\n      <Collapse onChange={callback}>\r\n        <Panel header=\"Q1.아이디 또는 비밀번호를 잊어먹은 경우에는 어떻게 해야 하나요?\" key=\"1\">\r\n          <p />A1. 아직 테스터 기간이기 때문에 아이디/비밀번호 찾기 기능이 없습니다.\r\n          <p />테스트 기간까지는 master@artudent.co.kr 메일로 등록 시 입력하신 전화번호와 성함을 알려주시면 빠른 시일 내로 처리를 도와드리겠습니다.\r\n          <p />감사합니다.\r\n        </Panel>\r\n        <Panel header=\"Q2.온라인 전시 신청을 하고 싶은데 어떻게 해야 하나요?\" key=\"2\">\r\n          <p />A2. 온라인 전시 신청은 하단의 온라인 전시 신청 버튼을 눌러 입력 폼을 입력해주세요.\r\n          <p />확인 후 빠른 시일 내로 입력하신 연락처로 연락 드리겠습니다.\r\n          <p />감사합니다.\r\n        </Panel>\r\n        <Panel header=\"Q3.작품 및 댓글 삭제나 수정은 어떻게 해야 하나요?\" key=\"3\">\r\n          <p />A3. 해당 기능은 아직 테스터 기간이기 때문에 수정/삭제 기능이 없습니다.\r\n          <p />해당 기능은 구현 중에 있으며, 구현 전에 수정 또는 삭제가 필요하신 경우에는 \r\n          <p />master@artudent.co.kr 로 해당 댓글 내용 또는 글 제목, 작성자 이름을 알려주시면 빠른 시일 내 처리를 도와드리겠습니다.\r\n          <p />감사합니다.\r\n        </Panel>\r\n        <Panel header=\"Q4.회원 탈퇴를 하고 싶은데, 어떻게 해야 하나요?\" key=\"4\">\r\n          <p />A4. 해당 기능은 아직 테스터 기간이기 때문에 탈퇴 기능이 없습니다.\r\n          <p />해당 기능은 구현 중에 있으며, 탈퇴를 원하시는 분께서는\r\n          <p />master@artudent.co.kr로 아이디와 성함 알려주시면 빠른 시일 내 처리를 도와드리겠습니다.\r\n          <p />감사합니다.\r\n        </Panel>\r\n    </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FAQ","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Avatar, Button, Tabs } from 'antd'\r\nimport Axios from 'axios'\r\nimport MyUpload from './MyUpload/MyUpload'\r\nimport FAQ from './FAQ';\r\nimport MyPageImg from './img/MyPage.png'\r\n// import { removeProItem } from '../../../_actions/user_actions'; \r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Mypage(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [UserId, setUserId] = useState([])\r\n    const [UserDatas, setUserDatas] = useState([])\r\n    const [Products, setProducts] = useState([])\r\n\r\n    function callback(key) {\r\n        console.log(key);\r\n      }\r\n\r\n    useEffect(() => {\r\n        if (props.user.userData && props.user.userData._id) {\r\n            // console.log('props', props.user.userData._id)\r\n            const users = props.user.userData._id\r\n            const userDatas = props.user.userData\r\n            // console.log(userDatas)\r\n\r\n            Axios.get(`/api/product/products_by_user?id=${users}`)\r\n              .then(response => {\r\n                // console.log('>>', response.data)\r\n                setUserId(users)\r\n                setUserDatas(userDatas)\r\n                setProducts(response.data)\r\n              })\r\n              .catch(err => alert(err))\r\n        }\r\n      }, [props.user])\r\n\r\n    //   let removeFromPro = (productId) => {\r\n    //     console.log('productId', productId._id)\r\n    \r\n    //     dispatch(removeProItem(productId._id))\r\n    //         .then(response => {\r\n    //         })\r\n    //   }\r\n\r\n    //   console.log('UserId', UserId)\r\n      console.log('UserDatas', UserDatas)\r\n    //   console.log('Products', Products)\r\n\r\n    return (\r\n        <div>\r\n            <img\r\n                src={MyPageImg}\r\n                alt='img'\r\n                style={{\r\n                    position: 'absolute',\r\n                    width: '100%',\r\n                    top: '50px',\r\n                    zIndex: 1\r\n                }}></img>\r\n            <div\r\n                style={{\r\n                    position: 'relative',\r\n                    width: '60%',\r\n                    margin: '3rem auto',\r\n                    zIndex: 10\r\n                }}>\r\n                <div style={{\r\n                        textAlign: 'center',\r\n                        paddingTop: '50px'\r\n                    }}>\r\n                    <h2 style={{ color: '#fff', paddingTop: '30px' }}>MyPage</h2>\r\n                    <hr style={{ width: '130px' }} />\r\n                    <Avatar\r\n                            src={UserDatas.image}\r\n                            alt=\"image\"\r\n                            style={{width: '200px', height: '200px', margin: '30px'}}\r\n                    />\r\n                    <h3 style={{ color: '#fff' }}>{UserDatas.name} ({UserDatas.nickname})</h3>\r\n                    <h5 style={{ color: '#fff', padding: '10px 0px 10px 0px' }}>\r\n                        {UserDatas.school} {UserDatas.college} {UserDatas.department}\r\n                    </h5>\r\n                    <hr style={{ width: '300px' }}/>\r\n                    <h5 style={{ color: '#fff', padding: '10px 0px 100px 0px' }}>{UserDatas.sns}</h5>\r\n                    <br />\r\n                    <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                        <TabPane tab=\"자주 묻는 질문\" key=\"1\">\r\n                            <FAQ />\r\n                        </TabPane>\r\n                        <TabPane tab=\"내가 올린 게시물\" key=\"2\">\r\n                            <MyUpload product={Products} \r\n                            // removeItem={removeFromPro} \r\n                            />\r\n                        </TabPane>\r\n                    </Tabs>\r\n                    <br />\r\n                    <Button>\r\n                        <a href='https://docs.google.com/forms/d/e/1FAIpQLSfFiOe9JIQNa3T70rDAB0herC2U88NSmGJ7I_NHc1XP24iXag/viewform'>\r\n                            온라인 전시페이지 신청하기    \r\n                        </a>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mypage","import React from 'react'\r\n\r\nfunction ServiceCenter() {\r\n  return (\r\n    <div\r\n            style={{\r\n                width: '60%',\r\n                margin: '3rem auto'\r\n            }}>\r\n            <div style={{\r\n                    textAlign: 'center'\r\n                }}>\r\n                <h2>ServiceCenter</h2>\r\n                <h4>회원가입 시 입력한 이름, 전화번호를 입력해주세요. 해당 전화번호로 아이디와 비밀번호를 알려드립니다.</h4>\r\n                <h4>최대 하루 정도 소요될 수 있습니다.</h4>\r\n                </div>\r\n                </div>\r\n  )\r\n}\r\n\r\nexport default ServiceCenter","import React, { useState, useEffect } from 'react'\r\nimport ImageGallery from 'react-image-gallery'\r\n\r\nfunction ProductImage(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (props.detail.images && props.detail.images.length > 0) {\r\n            let images = []\r\n\r\n            props.detail.images.map(item => {\r\n                images.push({\r\n                    //나중에 배포시 다이나믹하게 처리\r\n                    original: `http://localhost:5000/${item}`,\r\n                    thumbnail: `http://localhost:5000/${item}`\r\n                })\r\n            })\r\n            setImages(images)\r\n        }\r\n    }, [props.detail])\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <ImageGallery items={Images} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductImage","import React from 'react'\r\nimport { Button, Descriptions } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AddToLib } from '../../../../_actions/user_actions';\r\n\r\nfunction ProductInfo(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const clickHandler = () => {\r\n\r\n        //필요한 정보를 라이브러리에 넣어준다\r\n        dispatch(AddToLib(props.detail._id))\r\n        console.log('click=', props.detail._id)\r\n        \r\n        if (props.detail._id.length >= 1) {\r\n            alert('라이브러리에 저장되었습니다.')\r\n        }\r\n    }\r\n\r\n    console.log('>>>>>', props)\r\n    \r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <Descriptions title=\"\" bordered=\"bordered\">\r\n                <Descriptions.Item label=\"Title\">{props.detail.title}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Artist\">{props.detail.artist}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Technique\">{props.detail.tech}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Dimemsions\">{props.detail.dimensions}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Year\">{props.detail.year}年</Descriptions.Item>\r\n                <Descriptions.Item label=\"Continent\">{props.detail.continents}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Description\">\r\n                    <div style={{ wordBreak: 'break-all', textAlign: 'left' }}>\r\n                        {props.detail.description}\r\n                    </div></Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button size='large' shape='round' onClick={clickHandler} style={{borderColor: 'red', color: 'red'}}>\r\n                    Add\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo","import React, {useState} from 'react'\r\nimport { Comment, Avatar, Button, Input } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport Axios from 'axios';\r\n// import { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction SingleComment(props) {\r\n    // console.log('>>>>>>>>', props.postId);\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n\r\n    const onClickOpenReply = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    // const onDeleteComment = (targetedCommentId) => {\r\n    //     let confirmRes = window.confirm('정말 이 댓글을 삭제하시겠습니까?')\r\n\r\n    //     if (confirmRes) {\r\n    //         const variables = {\r\n    //             commentId: targetedCommentId\r\n    //         }\r\n\r\n    //         Axios.post('', variables)\r\n    //             .then(response => {\r\n    //                 if (response.data.success) {\r\n    //                     props.refreshDeleteFunction(response.data.deleteCommentId)\r\n    //                 } else {\r\n    //                     alert('댓글 지우기를 실패했습니다.')\r\n    //                 }\r\n    //             })\r\n    //     }\r\n    // }\r\n\r\n    const handleChange = (event) => {\r\n        setCommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        //새로 고침이 되지 않게 함\r\n        event.preventDefault();\r\n\r\n        const variables = {\r\n            content: CommentValue,\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n            responseTo: props.comment._id,\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                setOpenReply(!OpenReply)\r\n                props.refreshFunction(response.data.result)\r\n                setCommentValue(\"\")\r\n            } else {\r\n                alert('로그인 후 댓글 작성이 가능합니다.')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    // 대댓글 나오게 하는 기능\r\n    const actions = [\r\n        <>\r\n            <span onClick={onClickOpenReply} key=\"comment-basic-reply-to\">Reply to</span>\r\n            {/* <span onClick={ () => onDeleteComment (props.comment._id) }><DeleteOutlined /></span> */}\r\n        </>\r\n    ]\r\n    // console.log('>>>>', props)\r\n    \r\n\r\n     return (\r\n        <div>\r\n            <Comment\r\n                actions={actions}\r\n                author={props.comment.writer.name}\r\n                avatar={\r\n                    <Avatar\r\n                        src={props.comment.writer.image}\r\n                        alt=\"image\"\r\n                    />\r\n                }\r\n                content={\r\n                    <p>\r\n                        {props.comment.content}\r\n                    </p>\r\n                }\r\n            ></Comment>\r\n        \r\n            {OpenReply &&\r\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                    <TextArea\r\n                        style={{ width: '100%', borderRadius: '5px' }}\r\n                        onChange={handleChange}\r\n                        value={CommentValue}\r\n                        placeholder=\"write some comments\"\r\n                    />\r\n                    <br />\r\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit} >Submit</Button>\r\n                </form>\r\n            }\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default SingleComment","import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment'\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    // console.log('>>>>>>>>', props);\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let commentNumber = 0;\r\n        props.CommentLists.map((comment) => {\r\n            if (comment.responseTo === props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n    }, [props.CommentLists, props.parentCommentId])\r\n\r\n    const renderReplyComment = (parentCommentId) => \r\n        props.CommentLists.map((comment, index) => (\r\n            <React.Fragment key={index}>\r\n                {comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n        const handleChange = () => {\r\n            setOpenReplyComments(!OpenReplyComments)\r\n        }\r\n\r\n  return (\r\n    <div>\r\n        {ChildCommentNumber > 0 &&\r\n            <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\r\n                onClick={handleChange} >\r\n                    ▽ View {ChildCommentNumber} more comment(s)\r\n            </p>\r\n        }\r\n        {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n        }       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReplyComment","import React, { useState } from 'react'\r\nimport Axios from 'axios';\r\nimport { Button } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nfunction Comments(props) {\r\n    // console.log('2nd>>>>', props)\r\n    const [commentValue, setcommentValue] = useState(\"\")\r\n    const user = useSelector(state => state.user)\r\n\r\n    const handleClick = (event) => {\r\n        setcommentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const variables = {\r\n            content: commentValue,\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n        }\r\n        \r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    setcommentValue(\"\")\r\n                    props.refreshFunction(response.data.result)\r\n                    console.log(response.data.result)\r\n                }else {\r\n                    alert('커멘트를 저장하지 못했습니다.')\r\n                }\r\n            })\r\n        }\r\n\r\n  return (\r\n    <div>\r\n        <br />\r\n        <p> Replies </p>\r\n        <hr />\r\n        \r\n        {/* Comment Lists */}\r\n        \r\n        {props.CommentLists && props.CommentLists.map((comment, index) => (\r\n            (!comment.responseTo &&\r\n                <React.Fragment key={index}>\r\n                    <SingleComment refreshFunction={props.refreshFunction} postId={props.postId} comment={comment} />\r\n                    <ReplyComment parentCommentId={comment._id} postId={props.postId} CommentLists={props.CommentLists} refreshFunction={props.refreshFunction} />\r\n                </React.Fragment>\r\n        )))}\r\n        {/* {\r\n            props.CommentLists.filter(cmt => !(cmt.responseTo)).map((cmt, idx) => {\r\n                // console.log(`>>`, cmt)\r\n                return <SingleComment key={idx} postId={props.productId} comment={cmt} />\r\n            })\r\n        } */}\r\n\r\n        {/* Root Comment Form */}\r\n        <hr />\r\n        <form style= {{ display: 'flex', padding: '20px 0px 0px 0px' }} onSubmit={onSubmit} >\r\n            <textarea\r\n                style={{ width: '100%', borderRadius: '5px' }}\r\n                onChange={handleClick}\r\n                value={commentValue}\r\n                placeholder=\"코멘트를 작성해 주세요\"\r\n            />\r\n            <br/>\r\n            <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit} >Submit</Button>\r\n        </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'antd'\r\nimport Axios from 'axios'\r\n\r\nfunction Favorite(props) {\r\n\r\n    // console.log(props)\r\n\r\n    const productId = props.productId\r\n    const userFrom = props.userFrom\r\n    const productTitle = props.productInfo.title\r\n    const productPost = props.productInfo.images\r\n    const productArtist = props.productInfo.artist\r\n\r\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\r\n    const [Favorited, setFavorited] = useState(false)\r\n\r\n    let variables = {\r\n        userFrom: userFrom,\r\n        productId: productId,\r\n        productTitle: productTitle,\r\n        productPost: productPost,\r\n        productArtist: productArtist\r\n    }\r\n\r\n    console.log('user', props.userFrom)\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/favorite/favoriteNumber', variables)\r\n            .then(response => {\r\n                setFavoriteNumber(response.data.favoriteNumber)\r\n                if (response.data.success) {\r\n                    console.log('res', response.data)\r\n                } else {\r\n                    alert('숫자 정보를 가져오는데 실패했습니다.')\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/favorite/favorited', variables)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    console.log('res2', response.data)\r\n                    setFavorited(response.data.favorited)\r\n                }else{\r\n                    alert('정보를 가져오는데 실패 했습니다.')\r\n                }\r\n            })\r\n      \r\n    }, [])\r\n\r\n    const onClickFavorite = () => {\r\n\r\n        if(Favorited){\r\n            Axios.post('/api/favorite/removeFromFavorite', variables)\r\n                .then(response => {\r\n                    if(response.data.success){\r\n                        console.log('res3', response.data)\r\n                        setFavoriteNumber(FavoriteNumber - 1)\r\n                        setFavorited(!Favorited)\r\n                    }else {\r\n                        alert('Favorite 리스트에서 지우는 걸 실패했습니다.')\r\n                    }\r\n                })\r\n\r\n        }else{\r\n            Axios.post('/api/favorite/addToFavorite', variables)\r\n                .then(response => {\r\n                    if(response.data.success){\r\n                        console.log('res4', response.data)\r\n                        setFavoriteNumber(FavoriteNumber + 1)\r\n                        setFavorited(!Favorited)\r\n                    }else {\r\n                        alert('Favorite 리스트에서 추가하는 걸 실패했습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    \r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center'}}>\r\n        <Button size='large' shape='round' type='danger' style={{marginTop: '10px'}} onClick={onClickFavorite}>\r\n            {Favorited ? \"♥\" : \"♡\"} {FavoriteNumber}\r\n        </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Favorite","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport ProductImage from './Sections/ProductImage'\r\nimport ProductInfo from './Sections/ProductInfo'\r\nimport Comment from './Sections/Comment'\r\nimport { Row, Col } from 'antd'\r\nimport Favorite from './Sections/Favorite'\r\n\r\nfunction DetailProductPage(props) {\r\n\r\n    const productId = props.match.params.productId\r\n    const [Product, setProduct] = useState({})\r\n    const [CommentLists, setCommentLists] = useState([])\r\n    const Variable = {\r\n      productId: productId,\r\n    }\r\n    const refreshFunction = (newComment) => {\r\n      setCommentLists(CommentLists.concat(newComment))\r\n    }\r\n\r\n    useEffect(() => {\r\n      Axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n        .then(response => {\r\n          setProduct(response.data[0])\r\n          console.log(response.data)\r\n        })\r\n        .catch(err => alert(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      Axios.post('/api/comment/getComments', Variable)\r\n        .then(response => {\r\n            if(response.data.success){\r\n                // console.log('comments', response.data.comments)\r\n                setCommentLists(response.data.comments)\r\n            }else{\r\n                alert('코멘트 정보를 가져오는 것을 실패 하였습니다.')\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <h1>{Product.title}</h1>\r\n      </div>\r\n\r\n      {/* Favorite */}\r\n      <div style={{display: 'flex', justifyContent: 'right'}}>\r\n          <Favorite productInfo={Product} productId={productId} userFrom={localStorage.getItem('userId')}/>\r\n      </div>\r\n\r\n      <br />\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} sm={24}>\r\n          \r\n          {/* product image */}\r\n\r\n          <ProductImage detail={Product} />\r\n\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n      \r\n          {/* productInfo */}\r\n\r\n          <ProductInfo detail={Product}/>\r\n\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Comment */}\r\n      <Comment refreshFunction={refreshFunction} CommentLists={CommentLists} postId={productId}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailProductPage","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport MainPage from \"./views/MainPage/MainPage\";\nimport ExhibitPage from './views/ExhibitPage/ExhibitPage';\nimport LibraryPage from './views/Library/Library';\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport UploadProductPage from './views/UploadProductPage/UploadProductPage';\nimport MyPage from './views/MyPage/Mypage';\nimport MyUpload from './views/MyPage/MyUpload/MyUpload';\nimport ServiceCenter from './views/LoginPage/ServiceCenter';\nimport DetailProductPage from './views/DetailProductPage/DetailProductPage';\n\n//ExhibitionPage\n// import ExhibitPage1 from './views/ExhibitPage/ExhibitionPages/first.html';\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside  -> 로그인 한 상태에서만 나타나도록 지정\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(MainPage, null)} />\n          <Route exact path=\"/exhibition\" component={Auth(ExhibitPage, null)} />\n          <Route exact path=\"/artwork\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/library\" component={Auth(LibraryPage, true)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true)} />\n          <Route exact path=\"/mypage\" component={Auth(MyPage, true)} />\n          <Route exact path=\"/service\" component={Auth(ServiceCenter, null)} />\n\n          {/* ArtworkDetailPage */}\n          <Route exact path=\"/product/:productId\" component={Auth(DetailProductPage, null)} />\n\n          {/* ExhibitionPage*/}\n          {/* <Route exact path=\"/exhibition/1\" component={Auth(ExhibitPage1, null)} /> */}\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_LIB,\n    GET_LIB_ITEMS,\n    REMOVE_LIB_ITEM,\n    // REMOVE_PRO_ITEM,\n} from '../_actions/types';\n \n\nexport default function(state={}, action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        case ADD_TO_LIB:\n            return {...state, userData: { ...state.userData, library: action.payload } }  \n        case GET_LIB_ITEMS:\n            return {...state, libDetail: action.payload }\n        case REMOVE_LIB_ITEM:\n            return {...state, libDetail: action.payload.productInfo, userData: { ...state.userData, library: action.payload.library } }  \n        // case REMOVE_PRO_ITEM:\n        //     return {...state, product: action.payload.product, userData: {...state.userData}}\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/subscribeButton.9bced92e.png\";","module.exports = __webpack_public_path__ + \"static/media/ExhibitionImg.d06342e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/artwork.0e4ddf8e.png\";","module.exports = __webpack_public_path__ + \"static/media/mainImg.6a0f40a2.png\";","module.exports = __webpack_public_path__ + \"static/media/Background.0e4ddf8e.png\";","module.exports = __webpack_public_path__ + \"static/media/library.8f399185.png\";","module.exports = __webpack_public_path__ + \"static/media/AA.5da5f9e7.png\";","module.exports = __webpack_public_path__ + \"static/media/AA.5da5f9e7.png\";","module.exports = __webpack_public_path__ + \"static/media/upload.8f329fa2.png\";","module.exports = __webpack_public_path__ + \"static/media/MyPage.3e4fd3e7.png\";","module.exports = __webpack_public_path__ + \"static/media/exhibitImg.1f4b9743.jpg\";"],"sourceRoot":""}